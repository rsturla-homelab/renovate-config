name: Renovate Self-Hosted

on:
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/renovate.yml"
      - "org-inherited-config.json"
  schedule:
    # Every 30 minutes from 8:00 to 21:00 UTC
    - cron: "*/30 8-21 * * *"
  workflow_dispatch:
    inputs:
      reset_cache:
        description: 'Reset cache'
        type: boolean
        default: false

env:
  CACHE_ARCHIVE: renovate_cache.tar.gz
  CACHE_DIR: /tmp/renovate/cache/renovate/repository
  CACHE_KEY: renovate-cache

jobs:
  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Get Token
        id: get-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.RENOVATE_APP_ID }}
          private-key: ${{ secrets.RENOVATE_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          token: ${{ steps.get-token.outputs.token }}
          persist-credentials: false

      - uses: dawidd6/action-download-artifact@v2
        if: github.event.inputs.reset_cache == 'true'
        continue-on-error: true
        with:
          name: ${{ env.CACHE_KEY }}
          path: cache-download

      - name: Extract renovate cache
        run: |
          set -x
          if [ ! -d cache-download ] ; then
            echo "No cache found."
            exit 0
          fi

          mkdir -p $CACHE_DIR
          tar -xzf cache-download/$CACHE_ARCHIVE -C $CACHE_DIR
          sudo chown -R 12021:0 /tmp/renovate/
          ls -R $CACHE_DIR

      - name: Self-hosted Renovate
        uses: renovatebot/github-action@v41.0.22
        env:
          RENOVATE_DRY_RUN: ${{ github.event_name == 'pull_request' && 'full' }}
        with:
          token: ${{ steps.get-token.outputs.token }}
          configurationFile: ./renovate-config.json

      - name: Compress renovate cache
        run: |
          ls $CACHE_DIR
          tar -czvf $CACHE_ARCHIVE -C $CACHE_DIR .

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CACHE_KEY }}
          path: ${{ env.CACHE_ARCHIVE }}
          # Since this is updated and restored on every run, we don't need to keep it
          # for long. Just make sure this value is large enough that multiple renovate
          # runs can happen before older cache archives are deleted.
          retention-days: 1
